# Generated by Django 4.2.2 on 2023-09-14 21:16

from django.db import migrations
from loguru import logger


def set_game_difficulty_percentage(apps, schema_editor):
    Game = apps.get_model("games", "Game")
    for game in Game.objects.all():
        if game.difficulty_percentage is None:
            game.difficulty_percentage = 0
            game.save()

    logger.info("Processed all games")


def set_player_game_completion_date(apps, schema_editor):
    PlayerOwnedGame = apps.get_model("players", "PlayerOwnedGame")
    PlayerAchievements = apps.get_model("players", "PlayerUnlockedAchievement")
    Achievements = apps.get_model("achievements", "Achievement")
    for owned_game in PlayerOwnedGame.objects.all():
        logger.info(f"Processing player owned game {owned_game.game_id} for {owned_game.player_id}")
        available_achievements = Achievements.objects.filter(game_id=owned_game.game_id)
        unlocked_achievements = PlayerAchievements.objects.filter(game_id=owned_game.game_id).order_by("-datetime")

        logger.info(
            f"Game has {available_achievements.count()} achievements, player has unlocked {unlocked_achievements.count()}"
        )
        if (
            available_achievements.count() > 0
            and unlocked_achievements.count() > 0
            and available_achievements.count() == unlocked_achievements.count()
        ):
            logger.info(f"Player has unlocked all achievements")
            owned_game.completion_datetime = unlocked_achievements[0].datetime
        else:
            owned_game.completion_datetime = None
            owned_game.save()

    logger.info("Processed all owned games")


class Migration(migrations.Migration):
    dependencies = [
        ("players", "0010_playerownedgame_completion_datetime"),
    ]

    operations = [
        migrations.RunPython(set_game_difficulty_percentage, migrations.RunPython.noop),
        migrations.RunPython(set_player_game_completion_date, migrations.RunPython.noop),
    ]
